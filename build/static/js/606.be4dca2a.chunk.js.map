{"version":3,"file":"static/js/606.be4dca2a.chunk.js","mappings":"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","sources":["Components/Card/index.tsx","Components/Toasty/index.tsx","Containers/ViewAllCars/index.tsx","Services/index.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button, Checkbox, FormControlLabel, FormGroup, Grid, IconButton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_CAR, SEARCH_HISTORY, useCompareList } from \"../../Slices\";\nimport Toasty from \"../Toasty\";\nimport { Car } from \"../../Containers/ComparisionPage\";\n\ninterface Props {\n  car: Car;\n  noImage?: boolean;\n  noButton?: boolean;\n  onClose?: () => void;\n  compare?: boolean;\n}\n\nconst CarDetailsCard: React.FC<Props> = ({ car, noImage = true, noButton = true, onClose, compare = false }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const compareList = useCompareList();\n  const [disableCompare, setDisableCompare] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (compareList.length > 2) {\n      setDisableCompare(true);\n    }\n  }, [compareList]);\n\n  const addToCompare = () => {\n    if (compareList.length < 2) dispatch(ADD_CAR(car));\n    else Toasty.info(\"you can compare only two cars\")\n  };\n\n  const onViewDetails = () => {\n    navigate(\"/car-details\", { state: { car: car } });\n    dispatch(SEARCH_HISTORY(car));\n  };\n\n  return (\n    <Card\n      sx={{ maxWidth: 345, marginTop: 2, borderRadius: \"10px\", position: \"relative\", width: \"100vw\" }}\n      elevation={3}\n    >\n      {onClose && (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            top: 8,\n            right: 8,\n            color: \"grey\",\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n      {noImage && <CardMedia sx={{ height: 160 }} image={car.image} title=\"car image\" />}\n      <CardContent sx={{ height: 100 }}>\n        <Typography sx={{ fontSize: \"18px\", fontWeight: 800 }} component=\"div\">\n          {car?.make} {car?.model}\n        </Typography>\n        <Typography sx={{ fontSize: \"16px\", fontWeight: 600 }} component=\"div\">\n          {car?.price}\n        </Typography>\n        {compare ? (\n          <Grid container columns={{ xs: 12, md: 12 }}>\n            <Grid item xs={8} sm={8} md={8} margin={\"8px 0px\"}>\n              <Typography sx={{ fontSize: \"14px\", fontWeight: 400, color: \"#6E6F73\" }}>\n                {car?.color} | {car?.fuelType} | {car?.year}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={4} sm={4} md={4}>\n              <FormGroup onClick={addToCompare}>\n                <FormControlLabel\n                  disabled={disableCompare}\n                  control={<Checkbox defaultChecked={false} size=\"small\" color=\"default\" />}\n                  label=\"compare\"\n                />\n              </FormGroup>\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid container columns={{ xs: 12, md: 12 }}>\n            <Grid item xs={12} sm={12} md={12} margin={\"8px 0px\"}>\n              <Typography sx={{ fontSize: \"14px\", fontWeight: 400, color: \"#6E6F73\" }}>\n                {car?.color} | {car?.fuelType} | {car?.year}\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n      </CardContent>\n      {noButton && (\n        <CardActions>\n          <Button\n            onClick={onViewDetails}\n            variant=\"outlined\"\n            sx={{\n              borderColor: \"black\",\n              color: \"black\",\n              \"&:hover\": {\n                borderColor: \"black\",\n                backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n              },\n              width: \"100%\",\n              padding: \"10px\",\n              fontSize: \"16px\",\n              fontWeight: 900,\n            }}\n          >\n            View Details\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n};\n\nexport default CarDetailsCard;\n","import React from 'react';\nimport { toast, ToastOptions } from 'react-toastify';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { SxProps, Theme } from '@mui/material';\n\ninterface Props {\n\tmessage: string;\n\tsx?: SxProps<Theme>;\n}\n\nconst style = {\n\terror: {\n\t\tcolor: '#c85849',\n\t},\n\tsuccess: {\n\t\tcolor: '#34a853',\n\t},\n};\n\nconst ToastMessage: React.FC<Props> = ({ message, sx }) => {\n\treturn (\n\t\t<Grid container alignItems=\"center\" direction=\"row\" wrap=\"nowrap\" sx={sx}>\n\t\t\t<Box ml={1}>{message}</Box>\n\t\t</Grid>\n\t);\n};\n\nexport default {\n\terror: (message: string, options?: ToastOptions): React.ReactText =>\n\t\ttoast.error(<ToastMessage message={message} sx={style.error} />, options),\n\tinfo: (message: string, options?: ToastOptions): React.ReactText =>\n\t\ttoast.info(<ToastMessage message={message} />, options),\n\tsuccess: (message: string, options?: ToastOptions): React.ReactText =>\n\t\ttoast.success(<ToastMessage message={message} sx={style.success} />, options),\n};\n","import { useEffect, useState } from \"react\";\nimport { GetAllCars } from \"../../Services\";\nimport { Box, Grid } from \"@mui/material\";\nimport CarDetailsCard from \"../../Components/Card\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Header from \"../../Components/Header\";\n\nconst ViewAllCars = () => {\n  const [cars, setCars] = useState<Array<any>>([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n\n  const fetchCars = async (page: number) => {\n    try {\n      const carsList = await GetAllCars();\n      if (carsList.data.length > 0) {\n        setCars((prevCars) => [...prevCars, ...carsList.data]);\n      } else {\n        setHasMore(false);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCars(page);\n  }, [page]);\n\n  const fetchMoreData = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <>\n    <Header/>\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 1,\n      }}\n    >\n      <InfiniteScroll\n        dataLength={cars.length}\n        next={fetchMoreData}\n        hasMore={hasMore}\n        loader={<h4>Loading...</h4>}\n        endMessage={<p style={{ textAlign: \"center\" }}>No more cars to show</p>}\n      >\n        <Grid container spacing={2} justifyContent=\"center\" margin={'20px'}>\n          {cars.map((car: any, index: number) => (\n            <Grid item xs={12} sm={6} md={3} key={index}>\n              <CarDetailsCard car={car} />\n            </Grid>\n          ))}\n        </Grid>\n      </InfiniteScroll>\n    </Box>\n    </>\n  );\n};\n\nexport default ViewAllCars;\n","import axios from \"axios\";\n\nexport const GetAllCars = async () => {\n    const cars = await axios.get('https://mocki.io/v1/b714d278-4df3-4652-b42f-a105609845bb');\n    return cars;\n}"],"names":["_ref","car","noImage","noButton","onClose","compare","navigate","useNavigate","dispatch","useDispatch","compareList","useCompareList","disableCompare","setDisableCompare","useState","useEffect","length","_jsxs","Card","sx","maxWidth","marginTop","borderRadius","position","width","elevation","children","_jsx","IconButton","onClick","top","right","color","CloseIcon","CardMedia","height","image","title","CardContent","Typography","fontSize","fontWeight","component","make","model","price","Grid","container","columns","xs","md","item","sm","margin","fuelType","year","FormGroup","addToCompare","ADD_CAR","Toasty","info","FormControlLabel","disabled","control","Checkbox","defaultChecked","size","label","CardActions","Button","onViewDetails","state","SEARCH_HISTORY","variant","borderColor","backgroundColor","padding","style","error","success","ToastMessage","message","alignItems","direction","wrap","Box","ml","options","toast","ViewAllCars","cars","setCars","hasMore","setHasMore","page","setPage","fetchCars","async","carsList","axios","get","GetAllCars","data","prevCars","console","log","_Fragment","Header","display","justifyContent","InfiniteScroll","dataLength","next","fetchMoreData","prevPage","loader","endMessage","textAlign","spacing","map","index","CarDetailsCard"],"sourceRoot":""}